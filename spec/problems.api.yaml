# OpenApi header is included in this file to support code highlighting in VSCode
openapi: 3.0.3
info:
  title: Problems API
  version: "1.0.0"

paths:
  /problems/{problemId}/causing-events:
    get:
      tags:
        - problem
      summary: "List possible events which led to the problem"
      description: "Resulting events are ordered by likeness to be an actual problem cause"
      operationId: getProblemCausingEvents
      parameters:
        - $ref: "#/components/parameters/problemId"
        - $ref: "#/components/parameters/topologyTime"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/GetCausingEventsResult"
        "400":
          $ref: "#/components/responses/GetCausingEventsBadRequest"
        "404":
          $ref: "#/components/responses/GetCausingEventsNotFound"
        "500":
          $ref: "generic_error_handling.xapi.yaml#/components/responses/genericErrorsResponse"

components:
  parameters:
    problemId:
      name: problemId
      description: The problem id number.
      in: path
      required: true
      schema: { $ref: "#/components/schemas/ProblemId" }
    topologyTime:
      name: topologyTime
      in: query
      description: "A timestamp at which resources will be queried. If not given the resources are quired for current time."
      required: false
      schema: { $ref: "#/components/schemas/Instant" }
    limit:
      name: limit
      in: query
      required: false
      description: "Maximum number of resources to be returned in result."
      schema: { $ref: "#/components/schemas/Limit" }
  responses:
    GetCausingEventsResult:
      description: Get events causing a problem successfull result
      content:
        application/json:
          schema: { $ref: "#/components/schemas/GetCausingEventsResult" }
    GetCausingEventsBadRequest:
      description: Events causing a problem can not be got because of the bad request
      content:
        application/json:
          schema: { $ref: "#/components/schemas/GetCausingEventsBadRequest" }
    GetCausingEventsNotFound:
      description: Events causing a problem can not be got because some elements cannot be found
      content:
        application/json:
          schema: { $ref: "#/components/schemas/GetCausingEventsNotFound" }
  schemas:
    ProblemId:
      type: integer
      format: int64
    Instant:
      type: integer
      format: instant
    Limit:
      type: integer
      format: int32
      minimum: 1
    GetCausingEventsResult:
      oneOf:
        - $ref: "#/components/schemas/CausingEventsResult"
        - $ref: "#/components/schemas/TooManyTopologyResults"
      discriminator:
        propertyName: _type
      required:
        - _type
    CausingEventsResult:
      type: object
      properties:
        _type:
          type: string
          enum:
            - CausingEventsResult
        items:
          type: array
          items:
            $ref: "events.api.yaml#/components/schemas/TopologyEvent"
      required:
        - _type
        - items
    TooManyTopologyResults:
      type: object
      properties:
        _type:
          type: string
          enum:
            - TooManyTopologyResults
      required:
        - _type
    GetCausingEventsBadRequest:
      oneOf:
        - $ref: "#/components/schemas/LimitOutOfRange"
        - $ref: "#/components/schemas/TopologyTimeOutOfRange"
      discriminator:
        propertyName: _type
      required:
        - _type
    LimitOutOfRange:
      type: object
      properties:
        _type:
          type: string
          enum:
            - LimitOutOfRange
        message:
          type: string
        limit:
          type: integer
          format: int32
        lowerBound:
          type: integer
          format: int32
        upperBound:
          type: integer
          format: int32
      required:
        - _type
        - message
        - limit
        - lowerBound
        - upperBound
    TopologyTimeOutOfRange:
      type: object
      properties:
        _type:
          type: string
          enum:
            - TopologyTimeOutOfRange
        message:
          type: string
        topologyTimeMs:
          type: integer
          format: instant
        lowerBoundMs:
          type: integer
          format: instant
        upperBound:
          type: string
      required:
        - _type
        - message
        - topologyTimeMs
        - lowerBoundMs
        - upperBound
    GetCausingEventsNotFound:
      oneOf:
        - $ref: "#/components/schemas/ProblemNotFound"
        - $ref: "#/components/schemas/DataUnavailable"
      discriminator:
        propertyName: _type
      required:
        - _type
    ProblemNotFound:
      type: object
      properties:
        _type:
          type: string
          enum:
            - ProblemNotFound
        message:
          type: string
        problemId:
          type: integer
          format: int64
        requestTimeMs:
          type: integer
          format: instant
      required:
        - _type
        - message
        - problemId
        - requestTimeMs
    DataUnavailable:
      type: object
      properties:
        _type:
          type: string
          enum:
            - DataUnavailable
        message:
          type: string
        requestTimeMs:
          type: integer
          format: instant
        availableSinceMs:
          type: integer
          format: instant
      required:
        - _type
        - message
        - requestTimeMs
        - availableSinceMs
