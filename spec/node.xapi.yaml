# OpenApi header is included in this file to support code highlighting in VSCode
openapi: 3.0.3
info:
  title: Node API
  version: "1.0.0"
paths:
  /node:
    get:
      tags:
        - node
      summary: "Node API"
      description: "list all node types"
      operationId: nodeListTypes
      responses:
        "200":
          description: "listing of all node types"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodeTypes"
        "500":
          $ref: "generic_error_handling.xapi.yaml#/components/responses/genericErrorsResponse"
  /node/{nodeType}:
    get:
      tags:
        - node
      parameters:
        - $ref: "#/components/parameters/nodeType"
        - in: query
          name: namespace
          required: false
          schema:
            type: string
        - in: query
          name: ownedBy
          required: false
          schema:
            type: string
      summary: "Node type API"
      description: "list all nodes of that type"
      operationId: typeList
      responses:
        "200":
          description: "list of mentioned type nodes"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodeList"
        "500":
          $ref: "generic_error_handling.xapi.yaml#/components/responses/genericErrorsResponse"
  /node/{nodeType}/{nodeId}:
    delete:
      tags:
        - node
      parameters:
        - $ref: "#/components/parameters/nodeType"
        - $ref: "#/components/parameters/nodeId"
        - in: query
          name: timeoutSeconds
          schema:
            type: integer
            format: int64
      summary: "Node deletion API"
      description: "Delete a locked node"
      operationId: delete
      responses:
        "200":
          description: "Node deleted"
        "404":
          $ref: "generic_error_handling.xapi.yaml#/components/responses/genericErrorsResponse"
        "500":
          $ref: "generic_error_handling.xapi.yaml#/components/responses/genericErrorsResponse"
  /node/{nodeType}/{nodeIdOrUrn}/clone:
    post:
      tags:
        - node
      parameters:
        - $ref: "#/components/parameters/nodeType"
        - $ref: "#/components/parameters/nodeIdOrUrn"
      requestBody:
        $ref: "#/components/requestBodies/nodeClone"
      summary: "Clone a node with a new name"
      description: "Clone a node with a new name"
      operationId: clone
      responses:
        "200":
          description: "Cloned Node"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Node"
        "500":
          $ref: "generic_error_handling.xapi.yaml#/components/responses/genericErrorsResponse"
  /node/{nodeType}/{nodeId}/islocked:
    get:
      tags:
        - node
      parameters:
        - $ref: "#/components/parameters/nodeType"
        - $ref: "#/components/parameters/nodeId"
      summary: "Retrieve if a node is locked"
      description: "Retrieve if a node is locked"
      operationId: lock
      responses:
        "200":
          description: "Node lock status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LockedResponse"
        "500":
          $ref: "generic_error_handling.xapi.yaml#/components/responses/genericErrorsResponse"
  /node/{nodeType}/{nodeId}/unlock:
    post:
      tags:
        - node
      parameters:
        - $ref: "#/components/parameters/nodeType"
        - $ref: "#/components/parameters/nodeId"
      summary: "Node unlock API"
      description: "Unlock a locked node"
      operationId: unlock
      responses:
        "200":
          description: "Unlocked node"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Node"
        "500":
          $ref: "generic_error_handling.xapi.yaml#/components/responses/genericErrorsResponse"

components:
  parameters:
    nodeIdOrUrn:
      in: path
      name: nodeIdOrUrn
      required: true
      schema:
        type: string
        pattern: ^urn:.+|[0-9]+$
    nodeType:
      in: path
      name: nodeType
      required: true
      schema:
        type: string
    nodeId:
      in: path
      name: nodeId
      required: true
      schema:
        type: integer
        format: int64

  schemas:

    NodeTypes:
      type: object
      properties:
        nodeTypes:
          type: array
          items:
            type: object
            properties:
              typeName:
                type: string
              description:
                type: string
            required:
              - typeName
              - description
      required:
        - nodeTypes
    NodeList:
      type: array
      items:
        $ref: "#/components/schemas/Node"

    Node:
      type: object
      properties:
        typeName:
          type: string
        id:
          type: integer
          format: int64
        lastUpdateTimestamp:
          type: integer
          format: int64
        identifier:
          type: string
        name:
          type: string
        description:
          type: string
        ownedBy:
          type: string
        manual:
          type: boolean
        isSettingsNode:
          type: boolean
      required:
        - typeName
        - id
        - lastUpdateTimestamp
    LockedResponse:
      type: object
      discriminator:
        propertyName: _type
      oneOf:
        - $ref: "#/components/schemas/NodeLocked"
        - $ref: "#/components/schemas/NodeUnlocked"
      required:
        - _type
    NodeLocked:
      type: object
      properties:
        _type:
          type: string
          enum:
            - NodeLocked
        owner:
          type: string
      required:
        - _type
        - owner
    NodeUnlocked:
      type: object
      properties:
        _type:
          type: string
          enum:
            - NodeUnlocked
      required:
        - _type
    NodeName:
      type: object
      properties:
        name:
          type: string
      required:
        - name

  requestBodies:
    nodeClone:
      description: "New name for the node"
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NodeName"