# OpenApi header is included in this file to support code highlighting in VSCode
openapi: 3.0.3
info:
  title: Notification Channels API
  version: "1.0.0"
paths:
  /notifications/channels/slack/{channelId}:
    get:
      parameters:
        - $ref: "#/components/parameters/channelId"
      tags:
        - notification_channels
      summary: "Get the Slack Notification channel by id"
      description: "Get the slack notification channel by id"
      operationId: getSlackNotificationChannel
      responses:
        "200":
          $ref: "#/components/responses/slackNotificationChannel"
        "400":
          $ref: "#/components/responses/notificationChannelError"
        "404":
          $ref: "#/components/responses/notificationChannelNotFound"
        "500":
          $ref: "#/components/responses/notificationChannelError"
    delete:
      parameters:
        - $ref: "#/components/parameters/channelId"
      tags:
        - notification_channels
      summary: "Delete the Slack Notification channel by id"
      description: "Delete the slack notification channel by id"
      operationId: deleteSlackNotificationChannel
      responses:
        "204":
          description: "Slack notification channel is deleted."
        "400":
          $ref: "#/components/responses/notificationChannelError"
        "404":
          $ref: "#/components/responses/notificationChannelNotFound"
        "500":
          $ref: "#/components/responses/notificationChannelError"

  /notifications/channels/slack/oauth-redirect:
    get:
      parameters:
        - $ref: "#/components/parameters/redirectPath"
      tags:
        - notification_channels
      summary: "Starts Slack OAuth2 flow"
      description: "Redirects to Slack to start an OAuth2 flow."
      operationId: slackOauthRedirect
      responses:
        "302":
          description: "Redirects to Slack to start an OAuth2 flow that will return to the slack channel configuration afterwards. In case of an error redirects back to the Slack channel configuration with an `error` and a `channelId` parameter."
  /notifications/channels/slack/oauth-callback:
    get:
      parameters:
        - $ref: "#/components/parameters/oauthCode"
        - $ref: "#/components/parameters/oauthState"
        - $ref: "#/components/parameters/oauthError"
      tags:
        - notification_channels
      summary: "The OAuth callback for Slack"
      description: "The OAuth callback for Slack, which is used to obtain the access token for the Slack channel."
      operationId: slackOAuthCallback
      responses:
        "302":
          description: "Redirects back to the Slack channel configuration, in case of an error it includes an `error` query parameter. If known also a `channelId` parameter will be included."
  /notifications/channels/slack/{channelId}/listSlackChannels:
    get:
      parameters:
        - $ref: "#/components/parameters/channelId"
      tags:
        - notification_channels
      summary: "List all public Slack channels"
      description: "List all public Slack channels, used for selecting a channel for the notifications"
      operationId: listSlackChannels
      responses:
        "200":
          $ref: "#/components/responses/slackChannels"
        "400":
          $ref: "#/components/responses/notificationChannelError"
        "404":
          $ref: "#/components/responses/notificationChannelNotFound"
        "500":
          $ref: "#/components/responses/notificationChannelError"
  /notifications/channels/slack/{channelId}/joinSlackChannel:
    post:
      parameters:
        - $ref: "#/components/parameters/channelId"
      requestBody:
        $ref: "#/components/requestBodies/joinSlackChannel"
      tags:
        - notification_channels
      summary: "Join the specified Slack channel to send notifications"
      description: "Join the specified Slack channel and configure this notifiation channel to post notifications to the specified slack channel."
      operationId: joinSlackChannel
      responses:
        "200":
          $ref: "#/components/responses/slackNotificationChannel"
        "400":
          $ref: "#/components/responses/notificationChannelError"
        "404":
          $ref: "#/components/responses/notificationChannelNotFound"
        "500":
          $ref: "#/components/responses/notificationChannelError"
  /notifications/channels/slack/{channelId}/test:
    post:
      parameters:
        - $ref: "#/components/parameters/channelId"
      tags:
        - notification_channels
      summary: "Test the Notification channel"
      description: "Test the Notification channel by sending a test message to the notification channel."
      operationId: testSlackChannel
      responses:
        "204":
          description: "Successfully tested channel."
        "400":
          $ref: "#/components/responses/notificationChannelError"
        "404":
          $ref: "#/components/responses/notificationChannelNotFound"
        "500":
          $ref: "#/components/responses/notificationChannelError"

  /notifications/channels/webhook:
    post:
      requestBody:
        $ref: "#/components/requestBodies/webhookChannelWrite"
      tags:
        - notification_channels
      summary: "Create a Webhook Notification channel"
      description: "Create a Webhook Notification channel"
      operationId: createWebhookNotificationChannel
      responses:
        "200":
          $ref: "#/components/responses/webhookNotificationChannel"
        "400":
          $ref: "#/components/responses/notificationChannelError"
        "500":
          $ref: "#/components/responses/notificationChannelError"
  /notifications/channels/webhook/{channelId}:
    get:
      parameters:
        - $ref: "#/components/parameters/channelId"
      tags:
        - notification_channels
      summary: "Get the Webhook Notification channel by id"
      description: "Get the webhook notification channel by id"
      operationId: getWebhookNotificationChannel
      responses:
        "200":
          $ref: "#/components/responses/webhookNotificationChannel"
        "400":
          $ref: "#/components/responses/notificationChannelError"
        "404":
          $ref: "#/components/responses/notificationChannelNotFound"
        "500":
          $ref: "#/components/responses/notificationChannelError"
    put:
      parameters:
        - $ref: "#/components/parameters/channelId"
      requestBody:
        $ref: "#/components/requestBodies/webhookChannelWrite"
      tags:
        - notification_channels
      summary: "Update the Webhook Notification channel by id"
      description: "Update the webhook notification channel by id"
      operationId: updateWebhookNotificationChannel
      responses:
        "200":
          $ref: "#/components/responses/webhookNotificationChannel"
        "400":
          $ref: "#/components/responses/notificationChannelError"
        "404":
          $ref: "#/components/responses/notificationChannelNotFound"
        "500":
          $ref: "#/components/responses/notificationChannelError"
    delete:
      parameters:
        - $ref: "#/components/parameters/channelId"
      tags:
        - notification_channels
      summary: "Delete the Webhook Notification channel by id"
      description: "Delete the webhook notification channel by id"
      operationId: deleteWebhookNotificationChannel
      responses:
        "204":
          description: "Webhook notification channel is deleted."
        "400":
          $ref: "#/components/responses/notificationChannelError"
        "404":
          $ref: "#/components/responses/notificationChannelNotFound"
        "500":
          $ref: "#/components/responses/notificationChannelError"
  /notifications/channels/webhook/{channelId}/test:
    post:
      parameters:
        - $ref: "#/components/parameters/channelId"
      tags:
        - notification_channels
      summary: "Test the Webhook notification channel"
      description: "Test the webhook notification channel by sending a test message to the notification channel."
      operationId: testWebhookChannel
      responses:
        "204":
          description: "Successfully tested channel."
        "400":
          $ref: "#/components/responses/notificationChannelError"
        "404":
          $ref: "#/components/responses/notificationChannelNotFound"
        "500":
          $ref: "#/components/responses/notificationChannelError"

  /notifications/channels/opsgenie:
    post:
      requestBody:
        $ref: "#/components/requestBodies/opsgenieChannelWrite"
      tags:
        - notification_channels
      summary: "Create a Opsgenie Notification channel"
      description: "Create a Opsgenie Notification channel"
      operationId: createOpsgenieNotificationChannel
      responses:
        "200":
          $ref: "#/components/responses/opsgenieNotificationChannel"
        "400":
          $ref: "#/components/responses/notificationChannelError"
        "500":
          $ref: "#/components/responses/notificationChannelError"
  /notifications/channels/opsgenie/responders:
    get:
      parameters:
        - $ref: "#/components/parameters/genieKey"
        - $ref: "#/components/parameters/region"
      tags:
        - notification_channels
      summary: "List Opsgenie responders"
      description: "List Opsgenie responders"
      operationId: listOpsgenieResponders
      responses:
        "200":
          $ref: "#/components/responses/opsgenieResponders"
        "400":
          $ref: "#/components/responses/notificationChannelError"
        "500":
          $ref: "#/components/responses/notificationChannelError"
  /notifications/channels/opsgenie/{channelId}:
    get:
      parameters:
        - $ref: "#/components/parameters/channelId"
      tags:
        - notification_channels
      summary: "Get the Opsgenie Notification channel by id"
      description: "Get the opsgenie notification channel by id"
      operationId: getOpsgenieNotificationChannel
      responses:
        "200":
          $ref: "#/components/responses/opsgenieNotificationChannel"
        "400":
          $ref: "#/components/responses/notificationChannelError"
        "404":
          $ref: "#/components/responses/notificationChannelNotFound"
        "500":
          $ref: "#/components/responses/notificationChannelError"
    put:
      parameters:
        - $ref: "#/components/parameters/channelId"
      requestBody:
        $ref: "#/components/requestBodies/opsgenieChannelWrite"
      tags:
        - notification_channels
      summary: "Update the Opsgenie Notification channel by id"
      description: "Update the opsgenie notification channel by id"
      operationId: updateOpsgenieNotificationChannel
      responses:
        "200":
          $ref: "#/components/responses/opsgenieNotificationChannel"
        "400":
          $ref: "#/components/responses/notificationChannelError"
        "404":
          $ref: "#/components/responses/notificationChannelNotFound"
        "500":
          $ref: "#/components/responses/notificationChannelError"
    delete:
      parameters:
        - $ref: "#/components/parameters/channelId"
      tags:
        - notification_channels
      summary: "Delete the Opsgenie Notification channel by id"
      description: "Delete the opsgenie notification channel by id"
      operationId: deleteOpsgenieNotificationChannel
      responses:
        "204":
          description: "Opsgenie notification channel is deleted."
        "400":
          $ref: "#/components/responses/notificationChannelError"
        "404":
          $ref: "#/components/responses/notificationChannelNotFound"
        "500":
          $ref: "#/components/responses/notificationChannelError"
  /notifications/channels/opsgenie/{channelId}/test:
    post:
      parameters:
        - $ref: "#/components/parameters/channelId"
      tags:
        - notification_channels
      summary: "Test the Opsgenie notification channel"
      description: "Test the opsgenie notification channel by sending a test message to the notification channel."
      operationId: testOpsgenieChannel
      responses:
        "204":
          description: "Successfully tested channel."
        "400":
          $ref: "#/components/responses/notificationChannelError"
        "404":
          $ref: "#/components/responses/notificationChannelNotFound"
        "500":
          $ref: "#/components/responses/notificationChannelError"

  /notifications/channels/teams:
    post:
      requestBody:
        $ref: "#/components/requestBodies/teamsChannelWrite"
      tags:
        - notification_channels
      summary: "Create a Teams Notification channel"
      description: "Create a Teams Notification channel"
      operationId: createTeamsNotificationChannel
      responses:
        "200":
          $ref: "#/components/responses/teamsNotificationChannel"
        "400":
          $ref: "#/components/responses/notificationChannelError"
        "500":
          $ref: "#/components/responses/notificationChannelError"
  /notifications/channels/teams/{channelId}:
    get:
      parameters:
        - $ref: "#/components/parameters/channelId"
      tags:
        - notification_channels
      summary: "Get the Teams Notification channel by id"
      description: "Get the teams notification channel by id"
      operationId: getTeamsNotificationChannel
      responses:
        "200":
          $ref: "#/components/responses/teamsNotificationChannel"
        "400":
          $ref: "#/components/responses/notificationChannelError"
        "404":
          $ref: "#/components/responses/notificationChannelNotFound"
        "500":
          $ref: "#/components/responses/notificationChannelError"
    put:
      parameters:
        - $ref: "#/components/parameters/channelId"
      requestBody:
        $ref: "#/components/requestBodies/teamsChannelWrite"
      tags:
        - notification_channels
      summary: "Update the Teams Notification channel by id"
      description: "Update the teams notification channel by id"
      operationId: updateTeamsNotificationChannel
      responses:
        "200":
          $ref: "#/components/responses/teamsNotificationChannel"
        "400":
          $ref: "#/components/responses/notificationChannelError"
        "404":
          $ref: "#/components/responses/notificationChannelNotFound"
        "500":
          $ref: "#/components/responses/notificationChannelError"
    delete:
      parameters:
        - $ref: "#/components/parameters/channelId"
      tags:
        - notification_channels
      summary: "Delete the Teams Notification channel by id"
      description: "Delete the teams notification channel by id"
      operationId: deleteTeamsNotificationChannel
      responses:
        "204":
          description: "Teams notification channel is deleted."
        "400":
          $ref: "#/components/responses/notificationChannelError"
        "404":
          $ref: "#/components/responses/notificationChannelNotFound"
        "500":
          $ref: "#/components/responses/notificationChannelError"
  /notifications/channels/teams/{channelId}/test:
    post:
      parameters:
        - $ref: "#/components/parameters/channelId"
      tags:
        - notification_channels
      summary: "Test the Teams notification channel"
      description: "Test the teams notification channel by sending a test message to the notification channel."
      operationId: testTeamsChannel
      responses:
        "204":
          description: "Successfully tested channel."
        "400":
          $ref: "#/components/responses/notificationChannelError"
        "404":
          $ref: "#/components/responses/notificationChannelNotFound"
        "500":
          $ref: "#/components/responses/notificationChannelError"

components:
  parameters:
    channelId:
      in: path
      name: channelId
      required: true
      schema: { $ref: "#/components/schemas/ChannelId" }
      description: "Channel identifier"
    notificationId:
      in: path
      name: notificationId
      required: true
      schema: { $ref: "#/components/schemas/NotificationId" }
      description: "Notification configuration identifier"
    oauthCode:
      in: query
      name: code
      required: false
      schema:
        type: string
      description: "OAuth code from Slack. Either the code is present for the success case or the error parameter is present for the error case."
    oauthState:
      in: query
      name: state
      required: true
      schema:
        type: string
      description: "State parameter that was passed to Slack, should have the same value as the one passed to Slack."
    oauthError:
      in: query
      name: error
      required: false
      schema:
        type: string
      description: "Error parameter. Either the code is present for the success case or the error parameter is present for the error case."
    redirectPath:
      in: query
      name: redirectPath
      required: true
      schema:
        type: string
      description: "After completing the oauth flow the user will be redirected back to this path, in the UI, on StackState, to continue further setup of the Slack notification channel."
    region:
      in: query
      name: region
      required: true
      schema:
        type: string
        enum:
          - EU
          - US
      description: "OpsGenie region"
    genieKey:
      in: query
      name: genieKey
      required: true
      schema:
        type: string
      description: "OpsGenie API key"
  requestBodies:
    joinSlackChannel:
      description: "Provide a Slack channel id to join the specified Slack channel"
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SlackChannelId"
    webhookChannelWrite:
      description: "Create or update a webhook channel"
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/WebhookChannelWriteSchema"
    opsgenieChannelWrite:
      description: "Create or update a opsgenie channel"
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OpsgenieChannelWriteSchema"
    teamsChannelWrite:
      description: "Create or update a teams channel"
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TeamsChannelWriteSchema"
  responses:
    slackNotificationChannel:
      description: "Slack notification channel"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SlackNotificationChannel"
    slackChannels:
      description: "Array of all available Slack channels to which StackState can send messages."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SlackChannels"
    webhookNotificationChannel:
      description: "Webhook notification channel"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/WebhookNotificationChannel"
    opsgenieNotificationChannel:
      description: "Opsgenie notification channel"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OpsgenieNotificationChannel"
    teamsNotificationChannel:
      description: "Teams notification channel"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TeamsNotificationChannel"
    notificationChannelError:
      description: "Error while executing the request."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotificationChannelError"
    notificationChannelNotFound:
      description: "Notification channel was not found in the database"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotificationChannelNotFound"
    opsgenieResponders:
      description: "Opsgenie responders"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OpsgenieResponders"
  schemas:
    NotificationId:
      type: integer
      format: int64
    ChannelId:
      type: integer
      format: int64
    SlackChannels:
      type: array
      items:
        $ref: "#/components/schemas/SlackChannel"
    SlackChannel:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
      required:
       - name
       - id
    SlackChannelId:
      type: object
      properties:
        id:
          type: string
      required:
       - id
    NotificationIdBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
      required:
       - id
    NotificationChannelError:
      type: object
      properties:
        message:
          type: string
        channelId:
          type: string
        _type:
          type: string
          enum:
            - NotificationChannelError
      required:
        - message
        - _type
        - channelId
    NotificationChannelNotFound:
      type: object
      properties:
        message:
          type: string
        channelId:
          type: string
        _type:
          type: string
          enum:
            - NotificationChannelNotFound
      required:
        - message
        - channelId
        - _type
    NotificationChannel:
      oneOf:
        - $ref: "#/components/schemas/SlackNotificationChannel"
        - $ref: "#/components/schemas/WebhookNotificationChannel"
        - $ref: "#/components/schemas/OpsgenieNotificationChannel"
        - $ref: "#/components/schemas/TeamsNotificationChannel"
      discriminator:
        propertyName: _type
    BaseNotificationChannel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        notificationConfigurationId:
          type: integer
          format: int64
        status:
          $ref: "#/components/schemas/NotificationChannelStatus"
      required:
        - id
        - status
    SlackNotificationChannel:
      allOf:
        - $ref: "#/components/schemas/BaseNotificationChannel"
        - type: object
          properties:
            _type:
              type: string
              enum:
                - SlackNotificationChannel
            slackWorkspace:
              type: string
            slackChannel:
              type: string
            slackChannelId:
              type: string
          required:
            - _type
            - slackWorkspace
    WebhookChannelWriteSchema:
      type: object
      properties:
        url:
          type: string
        token:
          type: string
        verifySsl:
          type: boolean
        metadata:
          type: object
          additionalProperties:
            type: string
      required:
        - url
        - token
        - verifySsl
        - metadata
    WebhookNotificationChannel:
      allOf:
        - $ref: "#/components/schemas/BaseNotificationChannel"
        - $ref: "#/components/schemas/WebhookChannelWriteSchema"
        - type: object
          properties:
            _type:
              type: string
              enum:
                - WebhookNotificationChannel
          required:
            - _type
    OpsgenieChannelWriteSchema:
      type: object
      properties:
        region:
          type: string
          enum:
            - EU
            - US
        genieKey:
          type: string
        responders:
          type: array
          items:
            $ref: "#/components/schemas/OpsgenieResponder"
        priority:
          type: string
          enum:
            - P1
            - P2
            - P3
            - P4
            - P5
      required:
        - region
        - genieKey
        - responders
        - priority
    OpsgenieResponder:
      type: object
      properties:
        responderType:
          type: string
          enum:
            - TEAM
            - USER
            - SCHEDULE
            - ESCALATION
        responder:
          type: string
      required:
        - responderType
        - responder
    OpsgenieNotificationChannel:
      allOf:
        - $ref: "#/components/schemas/BaseNotificationChannel"
        - $ref: "#/components/schemas/OpsgenieChannelWriteSchema"
        - type: object
          properties:
            _type:
              type: string
              enum:
                - OpsgenieNotificationChannel
          required:
            - _type
    TeamsChannelWriteSchema:
      type: object
      properties:
        url:
          type: string
      required:
        - url
    TeamsNotificationChannel:
      allOf:
        - $ref: "#/components/schemas/BaseNotificationChannel"
        - $ref: "#/components/schemas/TeamsChannelWriteSchema"
        - type: object
          properties:
            _type:
              type: string
              enum:
                - TeamsNotificationChannel
          required:
            - _type
    NotificationChannelStatus:
      type: object
      properties:
        errors:
          type: array
          items:  
            $ref: "#/components/schemas/NotificationChannelStatusError"
      required:
        - errors
    NotificationChannelStatusError:
      type: object
      properties:
        category:
          type: string
        count:
          type: integer
        message:
          type: string
        firstSeenMs:
          type: integer
          format: instant
      required:
        - category
        - count
        - message
        - firstSeenMs
    OpsgenieResponders:
      type: array
      items:
        $ref: "#/components/schemas/OpsgenieResponder"
