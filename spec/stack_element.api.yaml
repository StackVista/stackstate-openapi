openapi: 3.0.3
info:
  title: Components API
  version: "1.0.0"

components:
  responses:
    telemetryStreamDefinition:
      description: "Single telemetry stream definition"
      content:
        application/json:
          schema:
            $ref: "telemetry.api.yaml#/components/schemas/TelemetryStreamDefinition"
    telemetryStreamDefinitionCollection:
      description: "Multiple telemetry stream definitions"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "telemetry.api.yaml#/components/schemas/TelemetryStreamDefinition"
    elementCheck:
      description: "Single check"
      content:
        application/json:
          schema:
            $ref: "checks.api.yaml#/components/schemas/Check"
    elementCheckCollection:
      description: "Multiple Checks"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "checks.api.yaml#/components/schemas/Check"
  schemas:
    StreamId:
      type: integer
      format: int64
    CheckId:
      type: integer
      format: int64
    QueryTime:
      type: integer
      format: instant
    DataStream:
      type: object
      discriminator:
        propertyName: _type
      oneOf:
        - $ref: "#/components/schemas/EventStream"
        - $ref: "#/components/schemas/MetricStream"
    MetricStream:
      type: object
      properties:
        _type:
          type: string
          enum:
            - MetricStream
        dataSource:
          type: integer
          format: int64
        dataType:
          $ref: "telemetry.api.yaml#/components/schemas/DataType"
        description:
          type: string
        id:
          type: integer
          format: int64
        lastUpdateTimestamp:
          type: integer
          format: int64
        name:
          type: string
        priority:
          $ref: "telemetry.api.yaml#/components/schemas/StreamPriority"
        query:
          $ref: "telemetry.api.yaml#/components/schemas/MetricTelemetryQuery"
        staleAfter:
          type: integer
          format: int64
      required:
        - _type
        - dataSource
        - dataType
        - name
        - query
    EventStream:
      type: object
      properties:
        _type:
          type: string
          enum:
            - EventStream
        dataSource:
          type: integer
          format: int64
        dataType:
          $ref: "telemetry.api.yaml#/components/schemas/DataType"
        description:
          type: string
        id:
          type: integer
          format: int64
        lastUpdateTimestamp:
          type: integer
          format: int64
        name:
          type: string
        priority:
          $ref: "telemetry.api.yaml#/components/schemas/StreamPriority"
        query:
          $ref: "telemetry.api.yaml#/components/schemas/EventTelemetryQuery"
      required:
        - _type
        - dataSource
        - dataType
        - name
        - query
    Scope:
      type: object
      discriminator:
        propertyName: _type
      properties:
        _type:
          type: string
          enum:
            - Scope
            - EverythingScope
            - NothingScope
            - QueryScope
      required:
      - _type
    EverythingScope:
      type: object
      discriminator:
        propertyName: _type
      properties:
        _type:
          type: string
          enum:
            - EverythingScope
      required:
      - _type
    NothingScope:
      type: object
      discriminator:
        propertyName: _type
      properties:
        _type:
          type: string
          enum:
            - NothingScope
      required:
      - _type
    QueryScope:
      type: object
      discriminator:
        propertyName: _type
      properties:
        _type:
          type: string
          enum:
            - QueryScope
        query:
          type: string
      required:
        - _type
        - query
    Subject:
      type: object
      discriminator:
        propertyName: _type
      properties:
        _type:
          type: string
          enum:
            - Subject
        handle:
          type: string
      required:
        _type
        handle
    SubjectWithScope:
      type: object
      discriminator:
        propertyName: _type
      properties:
        _type:
          type: string
          enum:
            - SubjectWithScope
        subject:
          $ref: "#/components/schemas/Subject"
        scope:
          $ref: "#/components/schemas/Scope"
      required:
        - subject
        - scope
