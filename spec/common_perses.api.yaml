components:
  schemas:
    Dashboard:
      properties:
        kind:
          $ref: '#/components/schemas/Kind'
        metadata:
          $ref: '#/components/schemas/ProjectMetadata'
        spec:
          $ref: '#/components/schemas/DashboardSpec'
      type: object
    DashboardSpec:
      properties:
        datasources:
          additionalProperties:
            $ref: '#/components/schemas/DatasourceSpec'
          description: Datasources is an optional list of datasource definition.
          type: object
        display:
          $ref: '#/components/schemas/Display'
        duration:
          $ref: '#/components/schemas/Duration'
        layouts:
          items:
            $ref: '#/components/schemas/Layout'
          type: array
        panels:
          additionalProperties:
            $ref: '#/components/schemas/Panel'
          type: object
        refreshInterval:
          $ref: '#/components/schemas/Duration'
        variables:
          items:
            $ref: '#/components/schemas/Variable'
          type: array
      type: object
    DatasourceSpec:
      properties:
        default:
          type: boolean
        display:
          $ref: '#/components/schemas/Display'
        plugin:
          $ref: '#/components/schemas/Plugin'
      type: object
    Display:
      properties:
        description:
          type: string
        name:
          type: string
      type: object
    Duration:
      description: |-
        A Duration represents the elapsed time between two instants
        as an int64 nanosecond count. The representation limits the
        largest representable duration to approximately 290 years.
      format: int64
      type: integer
    Kind:
      type: string
    LayoutKind:
      type: string
      enum:
        - Grid
      description: "Defines the layout type. Currently, only 'Grid' is supported."
    JSONRef:
      type: object
      properties:
        $ref:
          type: string
          description: "The JSON reference pointing to the actual object."
        path:
          type: array
          items:
            type: string
          description: "A list of strings used to navigate to the referenced object."
        object:
          type: object
          description: "The actual referenced object (not included in the OpenAPI spec, but used internally)."
      required:
        - $ref
    GridLayoutCollapse:
      type: object
      properties:
        open:
          type: boolean
          description: "Indicates whether the grid layout is collapsed."
      required:
        - open
    GridLayoutDisplay:
      type: object
      properties:
        title:
          type: string
          description: "The title of the grid layout."
        collapse:
          $ref: '#/components/schemas/GridLayoutCollapse'
      required:
        - title
    GridItem:
      type: object
      properties:
        x:
          type: integer
          description: "The x-coordinate of the item in the grid."
        y:
          type: integer
          description: "The y-coordinate of the item in the grid."
        width:
          type: integer
          description: "The width of the item in the grid."
        height:
          type: integer
          description: "The height of the item in the grid."
        content:
          $ref: '#/components/schemas/JSONRef'
      required:
        - x
        - y
        - width
        - height
        - content
    LayoutSpec:
      type: object
      properties:
        display:
          $ref: '#/components/schemas/GridLayoutDisplay'
        items:
          type: array
          items:
            $ref: '#/components/schemas/GridItem'
      required:
        - items
    Layout:
      type: object
      properties:
        kind:
          $ref: '#/components/schemas/LayoutKind'
        spec:
          $ref: '#/components/schemas/LayoutSpec'
      required:
        - kind
        - spec
    Link:
      properties:
        name:
          type: string
        renderVariables:
          type: boolean
        targetBlank:
          type: boolean
        tooltip:
          type: string
        url:
          type: string
      type: object
    Metadata:
      properties:
        createdAt:
          format: date-time
          type: string
        name:
          type: string
        updatedAt:
          format: date-time
          type: string
        version:
          format: uint64
          type: integer
      type: object
    Panel:
      properties:
        kind:
          type: string
        spec:
          $ref: '#/components/schemas/PanelSpec'
      type: object
    PanelDisplay:
      properties:
        description:
          type: string
        name:
          type: string
      type: object
    PanelSpec:
      properties:
        display:
          $ref: '#/components/schemas/PanelDisplay'
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        plugin:
          $ref: '#/components/schemas/Plugin'
        queries:
          items:
            $ref: '#/components/schemas/Query'
          type: array
      type: object
    Plugin:
      properties:
        kind:
          type: string
        spec:
          type: object
      type: object
    ProjectMetadata:
      properties:
        createdAt:
          format: date-time
          type: string
        name:
          type: string
        project:
          type: string
        updatedAt:
          format: date-time
          type: string
        version:
          format: uint64
          type: integer
      title: ProjectMetadata is the metadata struct for resources that belongs to a project.
      type: object
    ProjectMetadataWrapper:
      description: |-
        This wrapping struct is required to allow defining a custom unmarshall on Metadata
        without breaking the Project attribute (the fact Metadata is injected line in
        ProjectMetadata caused Project string to be ignored when unmarshalling)
      properties:
        project:
          type: string
      type: object
    Query:
      properties:
        kind:
          type: string
        spec:
          $ref: '#/components/schemas/QuerySpec'
      type: object
    QuerySpec:
      properties:
        plugin:
          $ref: '#/components/schemas/Plugin'
      type: object
    Variable:
      properties:
        kind:
          $ref: '#/components/schemas/Kind'
        spec:
          $ref: '#/components/schemas/variableSpec'
      type: object
    variableSpec:
      properties:
        GetName:
          description: GetName returns the name of the variable. It will be used to reference the variable in others
          type: string
      type: object
