# OpenApi header is included in this file to support code highlighting in VSCode
openapi: 3.0.3
info:
  title: Scripting API
  version: "1.0.0"
paths:
  /script/execute:
    post:
      tags:
        - scripting
      summary: "Execute script"
      description: "Execute a StackState Scripting Language or Template Language script with arbitrary arguments."
      operationId: scriptExecute
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExecuteScriptRequest"
      responses:
        "200":
          description: Result of executing the script.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecuteScriptResponse"
        "400":
          description: "Error occurred while executing script."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecuteScriptError"
        "408":
          description: "Script timed out."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecuteScriptTimeoutError"
        "500":
          $ref: "generic_error_handling.xapi.yaml#/components/responses/genericErrorsResponse"
components:
  schemas:
    ExecuteScriptRequest:
      type: object
      properties:
        timeoutMs:
          type: integer
        script:
          type: string
        argumentsScript:
          type: string
      required:
        - script
    ExecuteScriptResponse:
      type: object
      properties:
        result:
          type: object
          description: |
            Contains a `value` and `_type` property. This is described this way, because `value` can hold any
            JSON type and most open api generators (but not all) have problems with such types or are inconsistent with the OpenAPI spec.
            The `_type` property describes the original type of the result value during script execution.
            The `value` property holds the resulting value serialized to JSON.
            The `value` property can be of any JSON type, i.e. null, undefined, boolean, number, string, array or object.
          nullable: true
      required:
        - result
    ExecuteScriptError:
      type: object
      discriminator:
        propertyName: _type
      oneOf:
        - $ref: "#/components/schemas/ExecuteScriptSyntaxErrors"
        - $ref: "#/components/schemas/ExecuteScriptGroovyRuntimeError"
        - $ref: "#/components/schemas/ExecuteScriptExecutionError"
        - $ref: "#/components/schemas/ExecuteScriptSecurityError"
        - $ref: "#/components/schemas/ExecuteScriptExceptionError"
        - $ref: "#/components/schemas/ExecuteScriptWrongReturnTypeError"
        - $ref: "#/components/schemas/ExecuteScriptTimeoutError"
        - $ref: "#/components/schemas/ExecuteScriptArgumentsScriptError"
    ExecuteScriptSyntaxErrors:
      type: object
      required:
        - _type
        - message
        - errors
      properties:
        _type:
          type: string
          enum:
            - ExecuteScriptSyntaxErrors
        message:
          type: string
        errors:
          type: array
          items:
            type: object
            required:
              - message
              - location
            properties:
              message:
                type: string
              location:
                $ref: "#/components/schemas/ScriptLocation"
    ScriptLocation:
      type: object
      required:
        - line
        - column
      properties:
        line:
          type: integer
        column:
          type: integer
    ExecuteScriptGroovyRuntimeError:
      type: object
      required:
        - _type
        - message
      properties:
        _type:
          type: string
          enum:
            - ExecuteScriptGroovyRuntimeError
        message:
          type: string
        location:
          $ref: "#/components/schemas/ScriptLocation"
    ExecuteScriptExecutionError:
      type: object
      required:
        - _type
        - reason
        - message
      properties:
        _type:
          type: string
          enum:
            - ExecuteScriptExecutionError
        reason:
          type: string
        message:
          type: string
    ExecuteScriptSecurityError:
      type: object
      required:
        - _type
        - message
      properties:
        _type:
          type: string
          enum:
            - ExecuteScriptSecurityError
        message:
          type: string
    ExecuteScriptExceptionError:
      type: object
      required:
        - _type
        - message
      properties:
        _type:
          type: string
          enum:
            - ExecuteScriptExceptionError
        message:
          type: string
    ExecuteScriptWrongReturnTypeError:
      type: object
      required:
        - _type
        - message
        - actualReturnType
        - expectedReturnType
      properties:
        _type:
          type: string
          enum:
            - ExecuteScriptWrongReturnTypeError
        message:
          type: string
        actualReturnType:
          type: string
        expectedReturnType:
          type: string
    ExecuteScriptTimeoutError:
      type: object
      required:
        - _type
        - message
        - timeoutMs
      properties:
        _type:
          type: string
          enum:
            - ExecuteScriptTimeoutError
        message:
          type: string
        timeoutMs:
          type: integer
    ExecuteScriptArgumentsScriptError:
      type: object
      required:
        - _type
        - message
        - error
      properties:
        _type:
          type: string
          enum:
            - ExecuteScriptArgumentsScriptError
        message:
          type: string
        error:
          $ref: "#/components/schemas/ExecuteScriptError"
