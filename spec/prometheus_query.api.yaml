# OpenApi header is included in this file to support code highlighting in VSCode
openapi: 3.0.3
info:
  title: Stackstate prometheus read API
  version: "0.0.1"

paths:
  /v1alpha1/query:
    get:
      tags:
        - query
      summary: "Instant query at a single point in time"
      description: "The endpoint evaluates an instant query at a single point in time"
      operationId: getInstantQuery
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/time"
        - $ref: "#/components/parameters/timeout"
      responses:
        "200":
          $ref: "#/components/responses/successEnvelope"
        "400":
          $ref: "#/components/responses/invalidParameters"
        "422":
          $ref: "#/components/responses/unprocessableEntity"
        "503":
          $ref: "generic_error_handling.xapi.yaml#/components/responses/genericErrorsResponse"
    # post:
    #   tags:
    #     - query
    #   summary: "Instant query at a single point in time"
    #   description: "The endpoint evaluates an instant query at a single point in time"
    #   operationId: postInstantQuery
    #   requestBody:
    #     content:
    #       application/x-www-form-urlencoded:
    #         schema:
    #           $ref: "prometheus.api.yaml#/components/schemas/PromQueryRequest"
    #   responses:
    #     "201": 
    #       $ref: "#/components/responses/successEnvelope"
    #     "400":
    #       $ref: "#/components/responses/invalidParameters"
    #     "422":
    #       $ref: "#/components/responses/unprocessableEntity"
    #     "503":
    #       $ref: "generic_error_handling.xapi.yaml#/components/responses/genericErrorsResponse"
  /v1alpha1/query_range:
    get:
      tags:
        - query
      summary: "Query over a range of time"
      description: "The endpoint evaluates an expression query over a range of time"
      operationId: getRangeQuery
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/start"
        - $ref: "#/components/parameters/end"
        - $ref: "#/components/parameters/step"
        - $ref: "#/components/parameters/timeout"
      responses:
        "200":
          $ref: "#/components/responses/successEnvelope"
        "400":
          $ref: "#/components/responses/invalidParameters"
        "422":
          $ref: "#/components/responses/unprocessableEntity"
        "503":
          $ref: "generic_error_handling.xapi.yaml#/components/responses/genericErrorsResponse"
    # post:
    #   tags:
    #     - query
    #   summary: "Query over a range of time"
    #   description: "The endpoint evaluates an expression query over a range of time"
    #   operationId: postRangeQuery
    #   requestBody:
    #     content:
    #       application/x-www-form-urlencoded:
    #         schema:
    #           $ref: "prometheus.api.yaml#/components/schemas/PromQueryRangeRequest"
    #   responses:
    #     "201": 
    #       $ref: "#/components/responses/successEnvelope"
    #     "400":
    #       $ref: "#/components/responses/invalidParameters"
    #     "422":
    #       $ref: "#/components/responses/unprocessableEntity"
    #     "503":
    #       $ref: "generic_error_handling.xapi.yaml#/components/responses/genericErrorsResponse"
  /v1alpha1/query_exemplars:
    get:
      tags:
        - query
      summary: "Experimental: Exemplars for a specific time range"
      description: "Experimental: The returns a list of exemplars for a valid PromQL query for a specific time range"
      operationId: getExemplarsQuery
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/start"
        - $ref: "#/components/parameters/end"
      responses:
        "200":
          $ref: "#/components/responses/successExemplarEnvelope"
        "400":
          $ref: "#/components/responses/invalidParameters"
        "422":
          $ref: "#/components/responses/unprocessableEntity"
        "503":
          $ref: "generic_error_handling.xapi.yaml#/components/responses/genericErrorsResponse"
    # post:
    #   tags:
    #     - query
    #   summary: "Experimental: Exemplars for a specific time range"
    #   description: "Experimental: The returns a list of exemplars for a valid PromQL query for a specific time range"
    #   operationId: postExemplarsQuery
    #   requestBody:
    #     content:
    #       application/x-www-form-urlencoded:
    #         schema:
    #           $ref: "prometheus.api.yaml#/components/schemas/PromQueryExemplarRequest"
    #   responses:
    #     "201": 
    #       $ref: "#/components/responses/successExemplarEnvelope"
    #     "400":
    #       $ref: "#/components/responses/invalidParameters"
    #     "422":
    #       $ref: "#/components/responses/unprocessableEntity"
    #     "503":
    #       $ref: "generic_error_handling.xapi.yaml#/components/responses/genericErrorsResponse"
components:
  parameters:
    query:
      in: query
      name: query
      required: true
      schema:
        $ref: "prometheus.api.yaml#/components/schemas/PromQuery"
      description: "Prometheus expression query string"
    time:
      in: query
      name: time
      required: false
      schema:
        $ref: "prometheus.api.yaml#/components/schemas/PromTime"
      description: "Evaluation timestamp in rfc3339 format or unix format"
      example: "2015-07-01T20:10:51.781Z or 1660817432"
    timeout:
      in: query
      name: timeout
      required: false
      schema:
        $ref: "prometheus.api.yaml#/components/schemas/PromTimeout"
      description: "Evaluation timeout"
    start:
      in: query
      name: start
      required: true
      schema:
        $ref: "prometheus.api.yaml#/components/schemas/PromTime"
      description: "Start timestamp in rfc3339 format or unix format"
      example: "2015-07-01T20:10:51.781Z or 1660817432"
    end:
      in: query
      name: end
      required: true
      schema:
        $ref: "prometheus.api.yaml#/components/schemas/PromTime"
      description: "End timestamp in rfc3339 format or unix format"
      example: "2015-07-01T20:10:51.781Z or 1660817432"
    step:
      in: query
      name: step
      required: true
      schema:
        $ref: "prometheus.api.yaml#/components/schemas/PromStep"
      description: Query resolution step width in duration format or float number of seconds.
      example: "5m or 300"
  responses:
    successEnvelope:
      description: "JSON response envelope"
      content:
        application/json:
          schema:
            $ref: "prometheus.api.yaml#/components/schemas/PromEnvelope"
    successExemplarEnvelope:
      description: "JSON response envelope"
      content:
        application/json:
          schema:
            $ref: "prometheus.api.yaml#/components/schemas/PromExemplarEnvelope"
    invalidParameters:
      description: "Parameters are missing or incorrect"
      content:
        application/json:
          schema:
            $ref: "prometheus.api.yaml#/components/schemas/PromEnvelope"
    unprocessableEntity:
      description: "Expression can't be executed (RFC4918)"
      content:
        application/json:
          schema:
            $ref: "prometheus.api.yaml#/components/schemas/PromEnvelope"
